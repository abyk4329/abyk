---
import Footer from '../components/Footer';
import CookieConsent from '../components/CookieConsent';

interface Props {
  title: string;
  description?: string;
}

const { title, description = 'Minimal web application' } = Astro.props;
---

<!doctype html>
<html lang="he" dir="rtl" data-theme="light">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover" />
    <meta name="description" content={description} />
    <meta name="generator" content={Astro.generator} />
    
    <!-- PWA Meta Tags -->
    <meta name="mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
    <meta name="apple-mobile-web-app-title" content="Awakening" />
    <meta name="theme-color" content="#93726c" />
    
    <!-- Manifest -->
    <link rel="manifest" href="/manifest.json" />
    
    <!-- Icons -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Assistant:wght@300;400;600;800&display=swap"
      rel="stylesheet"
    />
    <script is:inline>
      (function () {
        try {
          var root = document.documentElement;
          var stored = window.localStorage.getItem('theme');
          var prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
          var theme = stored === 'light' || stored === 'dark' ? stored : prefersDark ? 'dark' : 'light';
          root.setAttribute('data-theme', theme);
        } catch (error) {
          document.documentElement.setAttribute('data-theme', 'light');
        }
      })();
    </script>
    <link rel="stylesheet" href="/tailwind.css" />
    <style is:global>
      @import '../styles/global.css';
      @import '../styles/typography-system.css';
    </style>
    <title>{title}</title>
  </head>
  <body class="bg-bg text-text min-h-screen antialiased">
    <main class="w-full">
      <slot />
    </main>
    
    <CookieConsent client:load />
    <Footer client:load />
    
    <!-- PWA Service Worker Registration -->
    <script is:inline>
      if ('serviceWorker' in navigator) {
        window.addEventListener('load', () => {
          navigator.serviceWorker.register('/sw.js')
            .then((registration) => {
              console.log('SW registered:', registration);
            })
            .catch((error) => {
              console.log('SW registration failed:', error);
            });
        });
      }
    </script>
  </body>
</html>
